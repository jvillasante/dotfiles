#!/bin/bash

#
# Encrypts file or directory using gpg symmetric or asymmetric encryption
# The output is on the form "*.tar.gz.gpg" or "*.tar.gz.asc"
# Files are moved into a directory of the same basename first
#

. $(dirname "$0")/../common.sh
if [ "$#" -ne 2 ]; then
    echo "Illegal number of arguments"
    echo "Usage: encrypt <file|folder> <symmetric|asymmetric>"
    exit 1
fi

function do_encrypt() {
    if [[ -d $1 ]]; then
        echo "Encrypting $1 with $2 encryption"
    elif [[ -f $1 ]]; then
        echo "Encrypting $1 with $2 encryption"
    else
        echo "$1 is not a file or directory, exiting..."
        exit 1
    fi

    local file_name=$1
    local file_to_encrypt=$1.tar.gz
    if [[ -f $1 ]]; then
        file_name=$(basename "$1" | cut -d. -f1)
        check $?

        mkdir -p $file_name
        check $?

        mv $1 $file_name
        check $?

        file_to_encrypt=$file_name.tar.gz
    fi

    tar czf $file_to_encrypt $file_name
    check $?

    if [ $2 = "symmetric" ]; then
        gpg --symmetric --cipher-algo AES256 -o $file_to_encrypt.gpg $file_to_encrypt
        check $?

        echo "Encrypted $1 to $file_to_encrypt.gpg"
    elif [ $2 = "asymmetric" ]; then
        gpg --encrypt --sign --armor -r jvillasantegomez@gmail.com -o $file_to_encrypt.asc $file_to_encrypt
        check $?

        echo "Encrypted $1 to $file_to_encrypt.asc"
    else
        echo "Invalid argument $2, exiting..."
        exit 1
    fi

    rm -f $file_to_encrypt
    check $?

    rm -rf $file_name
    check $?
}

time (do_encrypt $1 $2)
