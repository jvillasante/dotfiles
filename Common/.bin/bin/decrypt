#!/bin/bash

#
# Decrypts file using gpg (previously encrypted with `encrypt`)
# $1 is expected to have the form "*.tar.gz.gpg" or "*.tar.gz.asc"
#

. $(dirname "$0")/../common.sh
if [ "$#" -ne 1 ]; then
    echo "Illegal number of arguments"
    echo "Usage: decrypt <file.[gpg|asc]>"
    exit
fi

function do_decrypt() {
    local p=$(basename "$1" | cut -d. -f1)

    gpg --decrypt -o $p.tar.gz $1
    check $?

    tar xzf $p.tar.gz
    check $?

    rm -f $p.tar.gz
    check $?

    rm -rf $1
    check $?

    echo "Decrypted $1 to $p"
}

function decrypt_to_dir() {
    echo "Decrypting $1"
    if [ -f "$1" ]; then
        case "$1" in
            *.tar.gz.asc)
                { # Asymmetric
                    do_decrypt $1
                }
                ;;
            *.tar.gz.gpg)
                { # Symmetric
                    do_decrypt $1
                }
                ;;
            *)
                {
                    echo ">> Unknown extension on $1, exiting..."
                    exit 1
                }
                ;;
        esac
    else
        echo "'$1' is not a valid file, exiting..."
        exit 1
    fi
}

time (decrypt_to_dir $1)
