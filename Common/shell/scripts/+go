#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail
[[ "${TRACE-0}" == "1" ]] && set -o xtrace
cd "$(dirname "$0")" || exit 1

. "$HOME/.config/shell/common.sh"

usage() {
    echo "Usage:"
    echo "    $0 help:"
    echo "        Show this help message"
    echo "    $0 update:"
    echo "        Install/Update Common Go Packages"
    echo "    $0 clean:"
    echo "        Remove everything from $GOPATH"
    echo "    $0 go [arbitrary go command]:"
    echo "        Run arbitrary go command"
    echo
    echo " e.g: $0 update"
    exit "$1"
}

install_common_go_packages() {
    if hash go 2>/dev/null; then
        # the go language server
        go install golang.org/x/tools/gopls@latest
        check $?

        # better than `go fmt`
        go install golang.org/x/tools/cmd/goimports@latest
        check $?

        # go idiomatic linter
        go install golang.org/x/lint/golint@latest
        check $?
    fi
}

cleanup_go_binaries() {
    [ -d "${GOPATH}/bin" ] && rm -rf "$GOPATH/bin"
    [ -d "${GOPATH}/pkg" ] && rm -rf "$GOPATH/pkg"
}

nargs=$#
cmd=${1-}
rc=0
if [ "$#" -gt 0 ]; then shift; fi
case $cmd in
    update)
        [ "$nargs" -eq 1 ] || usage 1
        install_common_go_packages "$@"
        ;;
    clean)
        [ "$nargs" -eq 1 ] || usage 1
        cleanup_go_binaries
        ;;
    go)
        [ "$nargs" -lt 2 ] && usage 1
        if hash go 2>/dev/null; then
            go "$@"
        else
            echo "go not installed, exiting..."
            exit 1
        fi
        ;;
    help | --help | -h)
        usage 0
        ;;
    *)
        usage 1
        ;;
esac
exit $rc
