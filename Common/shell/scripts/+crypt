#!/usr/bin/env bash

#
# Encryption:
#   Encrypts file or directory using gpg symmetric or asymmetric encryption The output is on the form "*.tar.gz.gpg"
#   (symmetric) or "*.tar.gz.asc" (asymmetric). Files are moved into a directory of the same basename first.
#
# Decryption:
#   Decrypts file using gpg (previously encrypted with `encrypt`) expects and argument with the form "*.tar.gz.gpg"
#   (symmetric) or "*.tar.gz.asc (asymmetric)"
#

usage() {
    echo "Usage:"
    echo "    $0 help:"
    echo "        Show this help message"
    echo "    $0 -e [-s | -a] [file | directory]:"
    echo "        -e: encrypt the given *file* or *directory*"
    echo "        -s: symmetric gpg encryption"
    echo "        -a: asymmetric gpg encryption"
    echo "    $0 -d [filename.tar.gz.gpg | filename.tar.gz.asc]:"
    echo "        -d: decrypt the given file"
    echo "        *.tar.gz.gpg: assumes file was encrypted with symmetric gpg encryption"
    echo "        *.tar.gz.asc: assumes file was encrypted with asymmetric gpg encryption"
    echo
    echo " e.g: $0 -e -s /path/to/file/or/directory"
    echo " e.g: $0 -d /path/to/file/or/directory.tar.gz.gpg"
    exit "$1"
}

encrypt() {
    if [ -z "$1" ] || [ "$1" != "-s" ] && [ "$1" != "-a" ]; then
        echo "Illegal arguments ($1 must exist and be either '-s (symmetric)' or '-a (asymmetric)')"
        echo "  Usage: ./crypt -e [-s | -a] [file | directory]"
        exit 1
    fi

    if [ -z "$2" ] || [ ! -f "$2" ] && [ ! -d "$2" ]; then
        echo "Illegal arguments ($2 must exist and be either a file or directory)"
        echo "  Usage: ./crypt -e [-s | -a] [file | directory]"
        exit 1
    fi

    local file_name="$2"
    local file_to_encrypt="$2.tar.gz"
    if [[ -f "$2" ]]; then
        file_name=$(basename "$2" | cut -d. -f1)
        test $? -eq 0 || usage 1

        mkdir -p "$file_name"
        test $? -eq 0 || usage 1

        mv "$2" "$file_name"
        test $? -eq 0 || usage 1

        file_to_encrypt="$file_name.tar.gz"
    fi

    tar czf "$file_to_encrypt" "$file_name"
    test $? -eq 0 || usage 1

    if [ "$1" = "-s" ]; then
        gpg --symmetric --cipher-algo AES256 -o "$file_to_encrypt.gpg" "$file_to_encrypt"
        test $? -eq 0 || usage 1

        echo "Encrypted $2 to $file_to_encrypt.gpg (symmetric)"
    elif [ "$1" = "-a" ]; then
        gpg --encrypt --sign --armor -r jvillasantegomez@gmail.com -o "$file_to_encrypt.asc" "$file_to_encrypt"
        test $? -eq 0 || usage 1

        echo "Encrypted $2 to $file_to_encrypt.asc (asymmetric)"
    else
        echo "Invalid argument $2, exiting..."
        exit 1
    fi

    rm -f "$file_to_encrypt"
    test $? -eq 0 || usage 1

    rm -rf "$file_name"
    test $? -eq 0 || usage 1
}

do_decrypt() {
    local p
    p=$(basename "$1" | cut -d. -f1)
    test $? -eq 0 || usage 1

    gpg --decrypt -o "$p.tar.gz" "$1" >/dev/null 2>/dev/null
    test $? -eq 0 || usage 1

    tar xzf "$p.tar.gz"
    test $? -eq 0 || usage 1

    rm -f "$p.tar.gz"
    test $? -eq 0 || usage 1

    rm -rf "$1"
    test $? -eq 0 || usage 1

    echo "Decrypted $1 to $p ($2)"
}

decrypt() {
    if [ -z "$1" ] || [ ! -f "$1" ]; then
        echo "Illegal arguments ($1 must exist and be a file)"
        echo "  Usage: ./crypt -d [filename.tar.gz.gpg (symmetric) | filename.tar.gz.asc (asymmetric)]"
        exit 1
    fi

    echo "Decrypting $1..."
    if [ -f "$1" ]; then
        case "$1" in
            *.tar.gz.asc)
                { # Asymmetric
                    do_decrypt "$1" "asymmetric"
                }
                ;;
            *.tar.gz.gpg)
                { # Symmetric
                    do_decrypt "$1" "symmetric"
                }
                ;;
            *)
                {
                    echo "Illegal arguments ($1 must exist and be a file)"
                    echo "  Usage: ./crypt -d [filename.tar.gz.gpg (symmetric) | filename.tar.gz.asc (asymmetric)]"
                    exit 1
                }
                ;;
        esac
    else
        echo "Illegal arguments ($1 must exist and be a file)"
        echo "  Usage: ./crypt -d [filename.tar.gz.gpg (symmetric) | filename.tar.gz.asc (asymmetric)]"
        exit 1
    fi
}

nargs=$#
cmd=${1-}
rc=0
if [ "$#" -gt 0 ]; then shift; fi
case $cmd in
    -e)
        [ "$nargs" -eq 3 ] || usage 1
        time (encrypt "$@")
        ;;
    -d)
        [ "$nargs" -eq 2 ] || usage 1
        time (decrypt "$@")
        ;;
    help | --help | -h)
        usage 0
        ;;
    *)
        usage 1
        ;;
esac
exit $rc
