#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail
[[ "${TRACE-0}" == "1" ]] && set -o xtrace
cd "$(dirname "$0")" || exit 1

usage() {
    echo "Usage:"
    echo "    $0 help:"
    echo "        Show this help message"
    echo "    $0 update_zig:"
    echo "        Update zig"
    echo "    $0 update_zls:"
    echo "        Update zls"
    echo
    echo " e.g: $0 update_zig"
    exit "$1"
}

update_zig() {
    local ZIG_DIR="${HOME}/Workspace/Software/zig"
    if [ ! -d "$ZIG_DIR" ]; then
        mkdir "$ZIG_DIR"
        test $? -eq 0 || usage 1
    fi

    local ZIG_ZIG_DIR="$ZIG_DIR/zig"
    if [ -d "$ZIG_ZIG_DIR" ]; then
        rm -rf "$ZIG_ZIG_DIR"
        test $? -eq 0 || usage 1
    fi
    mkdir "$ZIG_ZIG_DIR"
    test $? -eq 0 || usage 1

    # Get lastest tarball from here: https://ziglang.org/download/
    local ZIG_TAR_LOCATION="https://ziglang.org/builds/zig-linux-x86_64-0.12.0-dev.4+e7ba4b7f9.tar.xz"
    ZIG_TAR_FILE="$(basename $ZIG_TAR_LOCATION)"
    test $? -eq 0 || usage 1

    curl --output-dir "$ZIG_ZIG_DIR" -sS -O "$ZIG_TAR_LOCATION"
    test $? -eq 0 || usage 1

    tar --strip-components=1 -xvf "$ZIG_ZIG_DIR/$ZIG_TAR_FILE" --directory "$ZIG_ZIG_DIR"
    test $? -eq 0 || usage 1

    rm -f "$ZIG_ZIG_DIR/$ZIG_TAR_FILE"
    test $? -eq 0 || usage 1

    [ -L "$HOME/.local/bin/zig" ] && unlink "$HOME/.local/bin/zig"
    ln -s "$ZIG_ZIG_DIR/zig" "$HOME/.local/bin"
    test $? -eq 0 || usage 1
}

update_zls() {
    if hash zig 2>/dev/null; then
        local ZIG_DIR="${HOME}/Workspace/Software/zig"
        if [ ! -d "$ZIG_DIR" ]; then
            mkdir "$ZIG_DIR"
            test $? -eq 0 || usage 1
        fi

        local ZLS_DIR="$ZIG_DIR/zls"
        if [ -d "$ZLS_DIR" ]; then
            rm -rf "$ZLS_DIR"
            test $? -eq 0 || usage 1
        fi

        git clone --recurse-submodules git@github.com:zigtools/zls.git "$ZLS_DIR"
        test $? -eq 0 || usage 1

        pushd "$ZLS_DIR" || usage 1

        zig build -Doptimize=ReleaseSafe
        test $? -eq 0 || usage 1

        zig build gen -- --generate-version-data master
        test $? -eq 0 || usage 1

        popd || usage 1

        [ -L "$HOME/.local/bin/zls" ] && unlink "$HOME/.local/bin/zls"
        ln -s "$ZLS_DIR/zig-out/bin/zls" "$HOME/.local/bin"
        test $? -eq 0 || usage 1
    else
        echo "zig is not on your path, try sourcing '.bashrc' or just restart this terminal"
    fi
}

nargs=$#
cmd=${1-}
rc=0
if [ "$#" -gt 0 ]; then shift; fi
case $cmd in
    update_zig)
        [ "$nargs" -eq 1 ] || usage 1
        update_zig
        ;;
    update_zls)
        [ "$nargs" -eq 1 ] || usage 1
        update_zls
        ;;
    help | --help | -h)
        usage 0
        ;;
    *)
        usage 1
        ;;
esac
exit $rc
